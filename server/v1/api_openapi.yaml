# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/apps/protoc-gen-openapi
openapi: 3.0.3
info:
    title: TigrisDB API
    version: 0.0.1
paths:
    /api/v1/databases/list:
        get:
            tags:
                - TigrisDB
            description: List databases in the current namespace
            operationId: TigrisDB_ListDatabases
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListDatabasesResponse'
    /api/v1/databases/{db}/collections/list:
        post:
            tags:
                - TigrisDB
            description: List collections in the specified database
            operationId: TigrisDB_ListCollections
            parameters:
                - name: db
                  in: path
                  description: List collection in this database
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ListCollectionsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListCollectionsResponse'
    /api/v1/databases/{db}/collections/{collection}/alter:
        post:
            tags:
                - TigrisDB
            description: Change the schema of existing collection
            operationId: TigrisDB_AlterCollection
            parameters:
                - name: db
                  in: path
                  description: Database name of the collection
                  required: true
                  schema:
                    type: string
                - name: collection
                  in: path
                  description: Collection name to change schema
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AlterCollectionRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AlterCollectionResponse'
    /api/v1/databases/{db}/collections/{collection}/create:
        post:
            tags:
                - TigrisDB
            description: Create new collection of documents in the specified database
            operationId: TigrisDB_CreateCollection
            parameters:
                - name: db
                  in: path
                  description: Database name where to create collection
                  required: true
                  schema:
                    type: string
                - name: collection
                  in: path
                  description: Collection name to create
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateCollectionRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateCollectionResponse'
    /api/v1/databases/{db}/collections/{collection}/documents/delete:
        delete:
            tags:
                - TigrisDB
            description: Delete documents from the collection according to specified filter
            operationId: TigrisDB_Delete
            parameters:
                - name: db
                  in: path
                  description: Database name where to insert documents
                  required: true
                  schema:
                    type: string
                - name: collection
                  in: path
                  description: Collection name where to insert documents
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/DeleteRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteResponse'
    /api/v1/databases/{db}/collections/{collection}/documents/insert:
        post:
            tags:
                - TigrisDB
            description: |-
                Insert creates new documents in the collection or replaces existing
                 documents if mustNotExist option is specified
            operationId: TigrisDB_Insert
            parameters:
                - name: db
                  in: path
                  description: Database name where to insert documents
                  required: true
                  schema:
                    type: string
                - name: collection
                  in: path
                  description: Collection name where to insert documents
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/InsertRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InsertResponse'
    /api/v1/databases/{db}/collections/{collection}/documents/read:
        post:
            tags:
                - TigrisDB
            description: |-
                Read range of documents from the collection according to
                  the specified filter
            operationId: TigrisDB_Read
            parameters:
                - name: db
                  in: path
                  description: Database name to read documents from
                  required: true
                  schema:
                    type: string
                - name: collection
                  in: path
                  description: Collection name to read documents from
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ReadRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ReadResponse'
    /api/v1/databases/{db}/collections/{collection}/documents/update:
        put:
            tags:
                - TigrisDB
            description: |-
                Update range of documents in the collection according to
                 the specified filter and the fields projection
            operationId: TigrisDB_Update
            parameters:
                - name: db
                  in: path
                  description: Database name where to update documents
                  required: true
                  schema:
                    type: string
                - name: collection
                  in: path
                  description: Collection name where to update documents
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateResponse'
    /api/v1/databases/{db}/collections/{collection}/drop:
        delete:
            tags:
                - TigrisDB
            description: Drop the collection
            operationId: TigrisDB_DropCollection
            parameters:
                - name: db
                  in: path
                  description: Database name of the collection
                  required: true
                  schema:
                    type: string
                - name: collection
                  in: path
                  description: Collection name to dtop
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/DropCollectionRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DropCollectionResponse'
    /api/v1/databases/{db}/create:
        post:
            tags:
                - TigrisDB
            description: Create database in the current namespace
            operationId: TigrisDB_CreateDatabase
            parameters:
                - name: db
                  in: path
                  description: Create database with this name
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateDatabaseRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateDatabaseResponse'
    /api/v1/databases/{db}/drop:
        delete:
            tags:
                - TigrisDB
            description: |-
                Drop database deletes all the collections in the database
                 along with all it documents
            operationId: TigrisDB_DropDatabase
            parameters:
                - name: db
                  in: path
                  description: Drop database with this name. Deletes all the collections in the database. Use with caution.
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/DropDatabaseRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DropDatabaseResponse'
    /api/v1/databases/{db}/transactions/begin:
        post:
            tags:
                - TigrisDB
            description: |-
                Starts a new transaction and returns a transactional object.
                 All reads/writes performed within a transaction will run with
                 serializable isolation.
            operationId: TigrisDB_BeginTransaction
            parameters:
                - name: db
                  in: path
                  description: Database name this transaction belongs to
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/BeginTransactionRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BeginTransactionResponse'
    /api/v1/databases/{db}/transactions/commit:
        post:
            tags:
                - TigrisDB
            description: |-
                Commit transaction atomically commit all the changes
                 performed in the context of the transaction.
                 All the changes committed or none of them committed in
                 the case of error.
            operationId: TigrisDB_CommitTransaction
            parameters:
                - name: db
                  in: path
                  description: Database name this transaction belongs to
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CommitTransactionRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommitTransactionResponse'
    /api/v1/databases/{db}/transactions/rollback:
        post:
            tags:
                - TigrisDB
            description: |-
                Rollback transaction discards all the changes
                 performed in the transaction
            operationId: TigrisDB_RollbackTransaction
            parameters:
                - name: db
                  in: path
                  description: Database name this transaction belongs to
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RollbackTransactionRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RollbackTransactionResponse'
components:
    schemas:
        AlterCollectionRequest:
            type: object
            properties:
                schema:
                    type: object
                    description: 'Schema of the documents in this collection. Should be proper JSON object. Schema syntax described here: {TBD}'
                options:
                    $ref: '#/components/schemas/CollectionOptions'
        AlterCollectionResponse:
            type: object
            properties:
                msg:
                    type: string
        BeginTransactionRequest:
            type: object
            properties:
                options:
                    $ref: '#/components/schemas/TransactionOptions'
            description: Start new transaction in database specified by "db"
        BeginTransactionResponse:
            type: object
            properties:
                tx_ctx:
                    $ref: '#/components/schemas/TransactionCtx'
            description: Start transaction returns transaction context  which uniquely identifies the transaction
        CollectionOptions:
            type: object
            properties:
                tx_ctx:
                    $ref: '#/components/schemas/TransactionCtx'
            description: Collection requests modifying options
        CommitTransactionRequest:
            type: object
            properties:
                tx_ctx:
                    $ref: '#/components/schemas/TransactionCtx'
            description: Commit transaction with the given ID
        CommitTransactionResponse:
            type: object
            properties: {}
        CreateCollectionRequest:
            type: object
            properties:
                schema:
                    type: object
                    description: 'Schema of the documents in this collection. Should be proper JSON object. Schema syntax described here: {TBD}'
                options:
                    $ref: '#/components/schemas/CollectionOptions'
        CreateCollectionResponse:
            type: object
            properties:
                msg:
                    type: string
        CreateDatabaseRequest:
            type: object
            properties:
                options:
                    $ref: '#/components/schemas/DatabaseOptions'
        CreateDatabaseResponse:
            type: object
            properties:
                msg:
                    type: string
        DatabaseOptions:
            type: object
            properties: {}
            description: Database requests modifying options
        DeleteRequest:
            type: object
            properties:
                filter:
                    type: object
                    description: 'Delete documents which matching specified filter. The filter should proper JSON object. Filter syntax described here: {TBD}'
                options:
                    $ref: '#/components/schemas/DeleteRequestOptions'
        DeleteRequestOptions:
            type: object
            properties:
                write_options:
                    $ref: '#/components/schemas/WriteOptions'
        DeleteResponse:
            type: object
            properties: {}
        DropCollectionRequest:
            type: object
            properties:
                options:
                    $ref: '#/components/schemas/CollectionOptions'
        DropCollectionResponse:
            type: object
            properties:
                msg:
                    type: string
        DropDatabaseRequest:
            type: object
            properties:
                options:
                    $ref: '#/components/schemas/DatabaseOptions'
        DropDatabaseResponse:
            type: object
            properties:
                msg:
                    type: string
        InsertRequest:
            type: object
            properties:
                documents:
                    type: array
                    items:
                        type: object
                    description: Array of documents to insert. Should be proper JSON object
                options:
                    $ref: '#/components/schemas/InsertRequestOptions'
        InsertRequestOptions:
            type: object
            properties:
                write_options:
                    $ref: '#/components/schemas/WriteOptions'
                must_not_exist:
                    type: boolean
                    description: The must_not_exist, when set to true, prevents overwriting if the documents with the same ID already exist in the collection
            description: Insert request options
        InsertResponse:
            type: object
            properties: {}
        ListCollectionsRequest:
            type: object
            properties:
                options:
                    $ref: '#/components/schemas/CollectionOptions'
        ListCollectionsResponse:
            type: object
            properties:
                collections:
                    type: array
                    items:
                        type: string
                    description: List of the collections in the database
        ListDatabasesResponse:
            type: object
            properties:
                dbs:
                    type: array
                    items:
                        type: string
                    description: List of the databases in the namespace
        ReadRequest:
            type: object
            properties:
                filter:
                    type: object
                    description: 'Returns documents matching this filter. The filter should proper JSON object Filter syntax described here: {TBD}'
                fields:
                    type: string
                    description: Limit fields returned by the read by this subset of the fields The fields should proper JSON object
                    format: byte
                options:
                    $ref: '#/components/schemas/ReadRequestOptions'
        ReadRequestOptions:
            type: object
            properties:
                tx_ctx:
                    $ref: '#/components/schemas/TransactionCtx'
                limit:
                    type: integer
                    description: Limit the number of documents returned by the read operation
                    format: int64
                skip:
                    type: integer
                    description: Number of documents to skip before starting to return resulting documents
                    format: int64
                offset:
                    type: string
                    description: Start returning document start from this primary key
                    format: byte
            description: ReadRequestOptions contain read behavior modifying options
        ReadResponse:
            type: object
            properties:
                doc:
                    type: object
                    description: Doc is the JSON object representing requested fields
                key:
                    type: string
                    description: Key is internal key, which uniquely identify the document. This fields is used to
                    format: byte
        RollbackTransactionRequest:
            type: object
            properties:
                tx_ctx:
                    $ref: '#/components/schemas/TransactionCtx'
            description: Rollback transaction with the given ID
        RollbackTransactionResponse:
            type: object
            properties: {}
        TransactionCtx:
            type: object
            properties:
                id:
                    type: string
                origin:
                    type: string
            description: Contains ID which uniquely identifies transaction.This context is returned by StartTransaction request andshould be passed in the options of document modificationrequests in order to run them in the context of the sametransaction
        TransactionOptions:
            type: object
            properties: {}
            description: Modify start transaction behavior
        UpdateRequest:
            type: object
            properties:
                fields:
                    type: object
                    description: Fields contains set of fields with the values which need to be updated. Should be proper JSON object.
                filter:
                    type: object
                    description: 'Update documents which matching specified filter. The filter should proper JSON object Filter syntax described here: {TBD}'
                options:
                    $ref: '#/components/schemas/UpdateRequestOptions'
        UpdateRequestOptions:
            type: object
            properties:
                write_options:
                    $ref: '#/components/schemas/WriteOptions'
        UpdateResponse:
            type: object
            properties:
                rc:
                    type: integer
                    format: int32
        WriteOptions:
            type: object
            properties:
                tx_ctx:
                    $ref: '#/components/schemas/TransactionCtx'
            description: WriteOptions contain write behavior modifying options
tags:
    - name: TigrisDB
